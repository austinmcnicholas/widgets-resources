name: Run native automated end-to-end tests for Android
on:
  workflow_dispatch:

  push:
    branches: [ master ]

#  pull_request:
#    branches: [ master ]

jobs:
  scope:
    name: Set scope
    runs-on: ubuntu-latest
    outputs:
      since: ${{ steps.since.outputs.since }}
    steps:
      - id: since
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=since::-- --since origin/${{ github.base_ref }}"
  mendix-version:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - id: get-mendix-version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "configs/e2e/mendix-versions.json"
          prop_path: "latest"
    outputs:
      mendix-version: ${{ steps.get-mendix-version.outputs.prop }}
  docker-images:
    needs: mendix-version
    runs-on: ubuntu-22.04
    env:
      MENDIX_VERSION: ${{ needs.mendix-version.outputs.mendix-version }}
    strategy:
      matrix:
        container: [ "mxbuild" ]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b #v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if docker image already exists
        run: |
          docker manifest inspect ghcr.io/mendix/widgets-resources/${{ matrix.container }}:${{ env.MENDIX_VERSION }} > /dev/null
          echo "IMAGE_MISSING=$?" >> $GITHUB_ENV
      - name: "${{ matrix.container }}"
        if: ${{ env.GITHUB_ENV.IMAGE_MISSING == 1 }}
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          file: ./packages/tools/pluggable-widgets-tools/scripts/${{ matrix.container }}.Dockerfile
          context: ./packages/tools/pluggable-widgets-tools/scripts
          build-args: |
            MENDIX_VERSION=${{ env.MENDIX_VERSION }}
          push: true
          tags: ${{ matrix.container }}:${{ env.MENDIX_VERSION }}
          secrets: GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
  widgets:
    needs: scope
    runs-on: ubuntu-22.04
    permissions:
      packages: read
      contents: read
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
        with:
          fetch-depth: 0
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: "Installing dependencies"
        run: npm ci --legacy-peer-deps
      - name: "Running build for development (MR)"
        if: github.event_name == 'pull_request'
        run: npm run build:native ${{ needs.scope.outputs.since }}
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: "Running build for development"
        if: github.event_name != 'pull_request'
        run: npm run build:native
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: Upload widgets
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: widgets
          path: packages/pluggableWidgets/**/dist/*/*.mpk
  project:
    needs: [ widgets, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: Download test project
        run: curl -L -o project.zip https://github.com/mendix/Native-Mobile-Resources/archive/refs/heads/main.zip
      - name: Extract test project
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28
        with:
          args: unzip -qq project.zip
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: widgets
          path: packages/pluggableWidgets
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: widgets
          path: packages/pluggableWidgets
      - name: update-widgets
        run: mx update-widgets --loose-version-check Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: Build test project
        run: mxbuild -o automation.mda Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: Upload MDA
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: mda
          path: automation.mda
  android-bundle:
    needs: [ project, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - uses: ./.github/actions/create-native-bundle
        with:
          platform: 'android'
  ios-bundle:
    needs: [ project, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - uses: ./.github/actions/create-native-bundle
        with:
          platform: 'ios'
  android-app:
    needs: [ android-bundle ]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out Native Template for Native Components Test Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 #v3
        with:
          repository: 'mendix/native-content-test-app'
          ref: 'main'
          ssh-key: ${{ secrets.NATIVE_CONTENT_TEST_APP }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: android
          path: bundles/android
      - name: "Copy files to the right location"
        run: |
          mv bundles/android/index.android.bundle android/app/src/main/assets/index.android.bundle
          cp -r bundles/android/assets/* android/app/src/main/res/
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: "Installing dependencies"
        run: |
          npm ci
          npm run configure
      - name: Setup JDK 11
        uses: actions/setup-java@16cca5479d7c6b6843f6a6515640ba33c6501543 #v3.4.0
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build with Gradle
        run: ./gradlew assembleAppstoreRelease assembleAndroidTest -DtestBuildType=release
        working-directory: ./android
      - name: Archive apk
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: android-app
          path: android/app/build/outputs/apk/**/*.apk
  ios-app:
    needs: [ ios-bundle ]
    runs-on: macos-12
    steps:
      - name: Check out Native Template for Native Components Test Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 #v3
        with:
          repository: 'mendix/native-content-test-app'
          ref: 'main'
          ssh-key: ${{ secrets.NATIVE_CONTENT_TEST_APP }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ios
          path: bundles/ios
      - name: "Copy files to the right location"
        run: mv bundles/ios/* ios/Bundle/
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: "Installing dependencies"
        run: |
          npm ci
          npm run configure
      - name: Pod install
        run: pod install
        working-directory: ./ios
      - name: Build with Xcode
        run: xcodebuild -workspace NativeTemplate.xcworkspace -scheme nativeTemplate -configuration Debug -sdk iphonesimulator -derivedDataPath build
        working-directory: ./ios
      - name: Archive app
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: ios-app
          path: ios/build/Build/Products/**/*.app
  android-avd:
    runs-on: macos-12
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: AVD cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        id: avd-cache
        with:
          path: |
            /Users/runner/.android/avd/*
            /Users/runner/.android/adb*
          key: avd-31
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@e790971012b979513b4e2fe70d4079bc0ca8a1ae #v2.24.0
        with:
          api-level: 31
          target: default
          arch: x86_64
          profile: pixel
          cores: 3
          avd-name: NATIVE_pixel_31
          force-avd-creation: false
          emulator-options: -skin 1080x1920 -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "AVD created"
  android-tests:
    needs: [ scope, mendix-version, project, android-app, android-avd ]
    runs-on: macos-12
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - uses: ./.github/actions/prepare-native-tests
        with:
          mendix-version: ${{ needs.mendix-version.outputs.mendix-version }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: android-app
          path: android-app
      - name: Move android apps to correct location
        run: |
          mkdir -p detox/apps
          find android-app -type f -iname "*.apk" -exec mv {} detox/apps/ \;
      - name: AVD cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        id: avd-cache
        with:
          path: |
            /Users/runner/.android/avd/*
            /Users/runner/.android/adb*
          key: avd-31
      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@e790971012b979513b4e2fe70d4079bc0ca8a1ae #v2.24.0
        with:
          api-level: 31
          target: default
          arch: x86_64
          profile: pixel
          cores: 3
          avd-name: NATIVE_pixel_31
          force-avd-creation: false
          emulator-options: -skin 1080x1920 -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: adb reverse tcp:8080 tcp:8080 && npm run test:e2e:local:android ${{ needs.scope.outputs.since }}
      - name: "Archive runtime logs"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: android-runtime-logs
          path: log/*.log
          if-no-files-found: ignore
      - name: "Archive test screenshot diff results"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: failure()
        with:
          name: android-screenshot-results
          path: |
            ${{ github.workspace }}/packages/**/e2e/diffs/**/*.png
            ${{ github.workspace }}/packages/**/e2e/actual/**/*.png
          if-no-files-found: ignore
  ios-tests:
    needs: [ scope, mendix-version, project, ios-app ]
    runs-on: macos-12
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - uses: ./.github/actions/prepare-native-tests
        with:
          mendix-version: ${{ needs.mendix-version.outputs.mendix-version }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ios-app
          path: ios-app
      - name: Move android apps to correct location
        run: |
          mkdir -p detox/apps
          find ios-app -type f -iname "*.app" -exec mv {} detox/apps/ \;
      - name: Run iOS tests
        run: npm run test:e2e:local:ios ${{ needs.scope.outputs.since }}
      - name: "Archive runtime logs"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: ios-runtime-logs
          path: log/*.log
          if-no-files-found: ignore
      - name: "Archive test screenshot diff results"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: failure()
        with:
          name: ios-screenshot-results
          path: |
            ${{ github.workspace }}/packages/**/e2e/diffs/**/*.png
            ${{ github.workspace }}/packages/**/e2e/actual/**/*.png
          if-no-files-found: ignore
