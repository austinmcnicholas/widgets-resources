name: Run native automated end-to-end tests for Android
on:
  workflow_dispatch:

  push:
    branches: [ master ]

#  pull_request:
#    branches: [ master ]

jobs:
  scope:
    name: Set scope
    runs-on: ubuntu-latest
    outputs:
      since: ${{ steps.since.outputs.since }}
    steps:
      - id: since
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=since::-- --since origin/${{ github.base_ref }}"
  mendix-version:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - id: get-mendix-version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "configs/e2e/mendix-versions.json"
          prop_path: "latest"
    outputs:
      mendix-version: ${{ steps.get-mendix-version.outputs.prop }}
  docker-images:
    needs: mendix-version
    runs-on: ubuntu-22.04
    env:
      MENDIX_VERSION: ${{ needs.mendix-version.outputs.mendix-version }}
    strategy:
      matrix:
        container: [ "mxbuild", "mxruntime" ]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if docker image already exists
        run: |
          docker manifest inspect ghcr.io/mendix/widgets-resources/${{ matrix.container }}:${{ env.MENDIX_VERSION }} > /dev/null
          echo "IMAGE_MISSING=$?" >> $GITHUB_ENV
      - name: "${{ matrix.container }}"
        if: ${{ env.GITHUB_ENV.IMAGE_MISSING == 1 }}
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          file: ./packages/tools/pluggable-widgets-tools/scripts/${{ matrix.container }}.Dockerfile
          context: ./packages/tools/pluggable-widgets-tools/scripts
          build-args: |
            MENDIX_VERSION=${{ env.MENDIX_VERSION }}
          push: true
          tags: ${{ matrix.container }}:${{ env.MENDIX_VERSION }}
          secrets: GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
  widgets:
    runs-on: ubuntu-22.04
    permissions:
      packages: read
      contents: read
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
        with:
          fetch-depth: 0
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: "Installing dependencies"
        run: npm ci --legacy-peer-deps
      - name: "Running build for development (MR)"
        if: github.event_name == 'pull_request'
        run: npm run build:native -- --since origin/${{ github.base_ref }}
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: "Running build for development"
        if: github.event_name != 'pull_request'
        run: npm run build:native
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: Upload widgets
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: widgets
          path: packages/pluggableWidgets/**/dist/*/*.mpk
  project:
    needs: [ widgets, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: Download test project
        run: curl -L -o project.zip https://github.com/mendix/Native-Mobile-Resources/archive/refs/heads/main.zip
      - name: Extract test project
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28
        with:
          args: unzip -qq project.zip
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: widgets
          path: packages/pluggableWidgets
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: widgets
          path: packages/pluggableWidgets
      - name: update-widgets
        run: mx update-widgets --loose-version-check Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: Build test project
        run: mxbuild -o automation.mda Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: Upload MDA
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: mda
          path: automation.mda
  bundle:
    needs: [ project, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    strategy:
      matrix:
        platform: [ 'android', 'ios' ]
    steps:
      - name: Download test project
        run: curl -L -o project.zip https://github.com/mendix/Native-Mobile-Resources/archive/refs/heads/main.zip
      - name: Extract test project
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28
        with:
          args: unzip -qq project.zip
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: Extract test project
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28
        with:
          args: unzip -qq automation.mda -d Native-Mobile-Resources-main/deployment
      - run: mkdir -p ${{ matrix.platform }}/assets
      - name: Bundle ${{ matrix.platform }}
        run: |
          cd Native-Mobile-Resources-main/deployment/native && \
          /tmp/mxbuild/modeler/tools/node/node \
          /tmp/mxbuild/modeler/tools/node/node_modules/react-native/local-cli/cli.js \
          bundle --verbose --platform ${{ matrix.platform }} --dev false \
          --config "$PWD/metro.config.json" \
          --bundle-output $GITHUB_WORKSPACE/${{ matrix.platform }}/${{ matrix.platform }}.bundle \
          --assets-dest $GITHUB_WORKSPACE/${{ matrix.platform }}/assets/ \
          --entry-file ./index.js
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: Upload ${{ matrix.platform }} bundle
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: ${{ matrix.platform }}
          path: ${{ matrix.platform }}
  android-app:
    needs: [ bundle ]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out Native Template for Native Components Test Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 #v3
        with:
          repository: 'mendix/native-content-test-app'
          ref: 'main'
          ssh-key: ${{ secrets.NATIVE_CONTENT_TEST_APP }}
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: android
          path: bundles/android
      - name: "Copy files to the right location"
        run: |
          mv bundles/android/android.bundle android/app/src/main/assets
          cp -r bundles/android/assets/* android/app/src/main/res/
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: "Installing dependencies"
        run: |
          npm ci
          npm run configure
      - name: Setup JDK 11
        uses: actions/setup-java@16cca5479d7c6b6843f6a6515640ba33c6501543 #v3.4.0
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build with Gradle
        run: ./gradlew assembleAppstoreRelease assembleAndroidTest -DtestBuildType=release
        working-directory: ./android
      - name: Archive apk
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: android-app
          path: android/app/build/outputs/apk/**/*.apk
  tests:
    needs: [ scope, mendix-version, project, android-app ]
    runs-on: macos-12
    strategy:
      matrix:
        platform: [ 'android' ]
    steps:
      - name: "Checking-out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ${{ matrix.platform }}-app
          path: ${{ matrix.platform }}-app
      - name: Move ${{ matrix.platform }} apps to correct location
        run: |
          mkdir -p detox/apps
          find ${{ matrix.platform }}-app -type f -iname "*.ap*" -exec mv {} detox/apps/ \;
      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: Extract test project
        run: unzip -qq automation.mda -d deployment
      - name: Start runtime
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          image: mendix/widgets-resources/mxruntime:${{ needs.mendix-version.outputs.mendix-version }}
          options: -d -p 8080 -v ${{ github.workspace }}/deployment:/project
          run: |
            mkdir -p /project/runtimes/ /project/data/database /project/data/files /project/data/tmp
            printf "c\nc\n" | m2ee -c .github/configs/m2ee-native.yml --yolo start
            while true; do tail -f /dev/null & wait ${!}; done
      - name: Wait for runtime
        uses: nev7n/wait_for_response@7fef3c1a6e8939d0b09062f14fec50d3c5d15fa1
        with:
          url: 'http://localhost:8080/'
          responseCode: '200'
          timeout: 600000
          interval: 10000
      - name: Install dependencies
        run: npm ci --force
      - name: "Download Android Emulator Resources"
        if: ${{ matrix.platform }} == android
        run: |
          # echo "y" | $ANDOID_HOME/tools/bin/sdkmanager --install "system-images;android-30;google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name NATIVE_pixel_31 --device "pixel" -k 'system-images;android-31;google_apis;x86'
      - name: Run tests
        run: npm run test:e2e:${{ matrix.platform }} ${{ needs.scope.outputs.since }}
