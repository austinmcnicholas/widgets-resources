name: Run native automated end-to-end tests for Android
on:
  workflow_dispatch:

  push:
    branches: [ master ]

#  pull_request:
#    branches: [ master ]

jobs:
  scope:
    runs-on: ubuntu-latest
    outputs:
      since: ${{ steps.since.outputs.since }}
    steps:
      - name: "Determine target ref"
        id: since
        if: github.event_name == 'pull_request'
        run: echo "::set-output name=since::--since origin/${{ github.base_ref }}"
  mendix-version:
    runs-on: ubuntu-22.04
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Get Mendix version"
        id: get-mendix-version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: configs/e2e/mendix-versions.json
          prop_path: latest
    outputs:
      mendix-version: ${{ steps.get-mendix-version.outputs.prop }}
  docker-images:
    needs: mendix-version
    runs-on: ubuntu-22.04
    env:
      MENDIX_VERSION: ${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b #v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Check if docker image already exists"
        run: |
          docker manifest inspect ghcr.io/mendix/widgets-resources/mxbuild:${{ env.MENDIX_VERSION }} > /dev/null
          echo "IMAGE_MISSING=$?" >> $GITHUB_ENV
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
        if: ${{ env.GITHUB_ENV.IMAGE_MISSING == 1 }}
      - name: "Build mxbuild image"
        if: ${{ env.GITHUB_ENV.IMAGE_MISSING == 1 }}
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
        with:
          file: ./packages/tools/pluggable-widgets-tools/scripts/mxbuild.Dockerfile
          context: ./packages/tools/pluggable-widgets-tools/scripts
          build-args: |
            MENDIX_VERSION=${{ env.MENDIX_VERSION }}
          push: true
          tags: ${{ matrix.container }}:${{ env.MENDIX_VERSION }}
          secrets: GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
  widgets:
    needs: scope
    runs-on: ubuntu-22.04
    permissions:
      packages: read
      contents: read
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
        with:
          fetch-depth: 0
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 #v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: "Install dependencies"
        run: npm ci --legacy-peer-deps
      - name: "Run build for development (MR)"
        if: github.event_name == 'pull_request'
        run: npm run build:native -- ${{ needs.scope.outputs.since }}
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: "Run build for development"
        if: github.event_name != 'pull_request'
        run: npm run build:native
        env:
          NODE_OPTIONS: --max_old_space_size=6144
      - name: "Upload widgets"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: widgets
          path: packages/pluggableWidgets/**/dist/*/*.mpk
  project:
    needs: [ widgets, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Download test project"
        run: curl -L -o project.zip https://github.com/mendix/Native-Mobile-Resources/archive/refs/heads/main.zip
      - name: "Extract test project"
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28
        with:
          args: unzip -qq project.zip
      - name: "Download built widgets"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: widgets
          path: packages/pluggableWidgets
      - name: "Update widgets"
        run: mx update-widgets --loose-version-check Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: "Build test project"
        run: mxbuild -o automation.mda Native-Mobile-Resources-main/NativeComponentsTestProject.mpr
      - name: "Upload MDA"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: mda
          path: automation.mda
  android-bundle:
    needs: [ project, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Download deployment package"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: "Create Android bundle"
        uses: ./.github/actions/create-native-bundle
        with:
          platform: android
          mda-file: automation.mda
  ios-bundle:
    needs: [ project, mendix-version ]
    runs-on: ubuntu-22.04
    container: ghcr.io/mendix/widgets-resources/mxbuild:${{ needs.mendix-version.outputs.mendix-version }}
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Download project MDA file"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: "Create iOS bundle"
        uses: ./.github/actions/create-native-bundle
        with:
          platform: ios
          mda-file: automation.mda
  android-app:
    needs: [ android-bundle ]
    runs-on: ubuntu-22.04
    steps:
      - name: "Check out Native Template for Native Components Test Project"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 #v3
        with:
          repository: mendix/native-content-test-app
          ref: main
          ssh-key: ${{ secrets.NATIVE_CONTENT_TEST_APP }}
      - name: "Download Android bundle and assets"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: android-bundle
          path: bundles/android
      - name: "Copy files to the right location"
        run: |
          mv bundles/android/index.android.bundle android/app/src/main/assets/index.android.bundle
          cp -r bundles/android/assets/* android/app/src/main/res/
      - name: "Set up Node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version: 14
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: "Install dependencies"
        run: npm ci
      - name: "Setup JDK 11"
        uses: actions/setup-java@16cca5479d7c6b6843f6a6515640ba33c6501543 #v3.4.0
        with:
          java-version: 11
          distribution: temurin
          cache: gradle
      - name: "Build Android app"
        run: ./gradlew assembleAppstoreRelease assembleAndroidTest -DtestBuildType=release
        working-directory: ./android
      - name: "Archive Android app"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: android-app
          path: android/app/build/outputs/apk/**/*.apk
  ios-app:
    needs: [ ios-bundle ]
    runs-on: macos-12
    steps:
      - name: "Check out Native Template for Native Components Test Project"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 #v3
        with:
          repository: mendix/native-content-test-app
          ref: main
          ssh-key: ${{ secrets.NATIVE_CONTENT_TEST_APP }}
      - name: "Download iOS bundle and assets"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ios-bundle
          path: bundles/ios
      - name: "Copy files to the right location"
        run: |
          mv bundles/ios/index.ios.bundle ios/Bundle/index.ios.bundle
          mv bundles/ios/assets/assets ios/Bundle/
      - name: "Set up Node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # v3
        with:
          node-version: 14
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: "Install Node dependencies"
        run: npm ci
      - name: "Setup Pods cache"
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: "Install Pod dependencies"
        run: pod install
        working-directory: ./ios
      - name: "Build iOS app"
        run: xcodebuild -workspace NativeTemplate.xcworkspace -scheme nativeTemplate -configuration Debug -sdk iphonesimulator -derivedDataPath build
        working-directory: ./ios
      - name: "Archive iOS app"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        with:
          name: ios-app
          path: ios/build/Build/Products/**/*.app
  android-avd:
    runs-on: macos-12
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Setup AVD cache"
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        id: avd-cache
        with:
          path: |
            /Users/runner/.android/avd/*
            /Users/runner/.android/adb*
          key: avd-31
      - name: "Create AVD and generate snapshot for caching"
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@e790971012b979513b4e2fe70d4079bc0ca8a1ae #v2.24.0
        with:
          api-level: 31
          target: aosp_atd
          arch: x86
          profile: pixel
          cores: 3
          ram-size: 4096M
          heap-size: 512M
          avd-name: NATIVE_pixel_31
          force-avd-creation: false
          emulator-options: -skin 1080x1920 -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "AVD created"
  android-tests:
    needs: [ scope, mendix-version, project, android-app, android-avd ]
    runs-on: macos-12
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 #v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: "Install dependencies"
        run: npm ci --legacy-peer-deps
      - name: "Download project MDA file"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: "Start runtime"
        uses: ./.github/actions/start-runtime
        with:
          mda-file: automation.mda
          mendix-version: ${{ needs.mendix-version.outputs.mendix-version }}
      - name: "Download Android app"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: android-app
          path: android-app
      - name: "Move android apps to correct location"
        run: |
          mkdir -p detox/apps
          find android-app -type f -iname "*.apk" -exec mv {} detox/apps/ \;
      - name: "Setup AVD cache"
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        id: avd-cache
        with:
          path: |
            /Users/runner/.android/avd/*
            /Users/runner/.android/adb*
          key: avd-31
      - name: "Run tests"
        uses: reactivecircus/android-emulator-runner@e790971012b979513b4e2fe70d4079bc0ca8a1ae #v2.24.0
        with:
          api-level: 31
          target: aosp_atd
          arch: x86
          profile: pixel
          cores: 3
          ram-size: 4096M
          heap-size: 512M
          avd-name: NATIVE_pixel_31
          force-avd-creation: false
          emulator-options: -skin 1080x1920 -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb shell setprop debug.hwui.renderer skiagl
            adb shell "rm -fr /data/local/tmp/detox"
            adb shell "mkdir -p /data/local/tmp/detox"
            adb push "/Users/runner/work/widgets-resources/widgets-resources/detox/apps/app-appstore-release.apk" "/data/local/tmp/detox/Application.apk"
            adb push "/Users/runner/work/widgets-resources/widgets-resources/detox/apps/app-appstore-release-androidTest.apk" "/data/local/tmp/detox/Test.apk"
            adb shell pm install -r -g -t /data/local/tmp/detox/Application.apk 2>/dev/null
            adb shell pm install -r -g -t /data/local/tmp/detox/Test.apk 2>/dev/null
            adb reverse tcp:8080 tcp:8080
            npm run test:e2e:local:android -- ${{ needs.scope.outputs.since }}
      - name: "Archive runtime logs"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: android-runtime-logs
          path: log/*.log
          if-no-files-found: ignore
      - name: "Archive test screenshot diff results"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: failure()
        with:
          name: android-screenshot-results
          path: |
            ${{ github.workspace }}/packages/**/e2e/diffs/**/*.png
            ${{ github.workspace }}/packages/**/e2e/actual/**/*.png
          if-no-files-found: ignore
      - name: "Archive artifacts"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: android-artifacts
          path: packages/pluggableWidgets/**/.artifacts/
          if-no-files-found: ignore
  ios-tests:
    needs: [ scope, mendix-version, project, ios-app ]
    runs-on: macos-12
    steps:
      - name: "Check out code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3
      - name: "Set up node"
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 #v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: "Install dependencies"
        run: npm ci --legacy-peer-deps
      - name: "Download project MDA file"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: mda
      - name: "Start runtime"
        uses: ./.github/actions/start-runtime
        with:
          mda-file: automation.mda
          mendix-version: ${{ needs.mendix-version.outputs.mendix-version }}
      - name: "Download iOS app"
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: ios-app
          path: ios-app
      - name: "Move iOS app to correct location"
        run: |
          mkdir -p detox/apps
          find ios-app -type d -iname "*.app" -exec cp -R {} detox/apps/ \;
      - name: Install Detox Dependencies
        run: |
          brew tap wix/brew
          brew install applesimutils
      - name: "Run tests"
        run: npm run test:e2e:local:ios -- ${{ needs.scope.outputs.since }}
      - name: "Archive runtime logs"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: ios-runtime-logs
          path: log/*.log
          if-no-files-found: ignore
      - name: "Archive test screenshot diff results"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: failure()
        with:
          name: ios-screenshot-results
          path: |
            ${{ github.workspace }}/packages/**/e2e/diffs/**/*.png
            ${{ github.workspace }}/packages/**/e2e/actual/**/*.png
          if-no-files-found: ignore
      - name: "Archive artifacts"
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # v2
        if: always()
        with:
          name: ios-artifacts
          path: packages/pluggableWidgets/**/.artifacts/
          if-no-files-found: ignore
